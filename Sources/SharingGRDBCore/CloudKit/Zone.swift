// @Table("sharing_grdb_cloudkit_zones")
struct Zone {
  // @Column(primaryKey: true)
  let zoneName: String
  let schema: String
}

// NB: This is generated by inlining the above macro applications.
extension Zone: StructuredQueriesCore.Table, StructuredQueriesCore.PrimaryKeyedTable {
  public struct TableColumns: StructuredQueriesCore.TableDefinition, StructuredQueriesCore
      .PrimaryKeyedTableDefinition
  {
    public typealias QueryValue = Zone
    public let zoneName = StructuredQueriesCore.TableColumn<QueryValue, String>(
      "zoneName", keyPath: \QueryValue.zoneName)
    public let schema = StructuredQueriesCore.TableColumn<QueryValue, String>(
      "schema", keyPath: \QueryValue.schema)
    public var primaryKey: StructuredQueriesCore.TableColumn<QueryValue, String> {
      self.zoneName
    }
    public static var allColumns: [any StructuredQueriesCore.TableColumnExpression] {
      [QueryValue.columns.zoneName, QueryValue.columns.schema]
    }
  }
  public struct Draft: StructuredQueriesCore.TableDraft {
    public typealias PrimaryTable = Zone
    let zoneName: String?
    let schema: String
    public struct TableColumns: StructuredQueriesCore.TableDefinition {
      public typealias QueryValue = Zone.Draft
      public let zoneName = StructuredQueriesCore.TableColumn<QueryValue, String?>(
        "zoneName", keyPath: \QueryValue.zoneName)
      public let schema = StructuredQueriesCore.TableColumn<QueryValue, String>(
        "schema", keyPath: \QueryValue.schema)
      public static var allColumns: [any StructuredQueriesCore.TableColumnExpression] {
        [QueryValue.columns.zoneName, QueryValue.columns.schema]
      }
    }
    public static let columns = TableColumns()
    public static let tableName = Zone.tableName
    public init(decoder: inout some StructuredQueriesCore.QueryDecoder) throws {
      self.zoneName = try decoder.decode(String.self)
      let schema = try decoder.decode(String.self)
      guard let schema else {
        throw QueryDecodingError.missingRequiredColumn
      }
      self.schema = schema
    }
    public init(_ other: Zone) {
      self.zoneName = other.zoneName
      self.schema = other.schema
    }
    public init(
      zoneName: String? = nil,
      schema: String
    ) {
      self.zoneName = zoneName
      self.schema = schema
    }
  }
  public static let columns = TableColumns()
  public static let tableName = "sharing_grdb_cloudkit_zones"
  public init(decoder: inout some StructuredQueriesCore.QueryDecoder) throws {
    let zoneName = try decoder.decode(String.self)
    let schema = try decoder.decode(String.self)
    guard let zoneName else {
      throw QueryDecodingError.missingRequiredColumn
    }
    guard let schema else {
      throw QueryDecodingError.missingRequiredColumn
    }
    self.zoneName = zoneName
    self.schema = schema
  }
}
